datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  creatTime     DateTime        @default(now())
  lastLoginTime DateTime        @updatedAt
  trueName      String?
  username      String          @unique
  password      String
  roles         Json
  hubituses     Hubitus[]
  statuses      Status[]
  getpoints     Getpoint[]
  usepoints     Usepoint[]
  messages      Message[]
  questions     Question[]
  oauthType     String
  openId        String
  sessionKey    String?
  unionId       String
  inviterId     String?
  phone         String?
  nickName      String?
  avatarUrl     String?
  gender        EnumUserGender?
  birthday      DateTime?
  userIdCard    String?
  country       String?
  province      String?
  city          String?
  language      String?
}

model Hubitus {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Status {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Getpoint {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Usepoint {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  event     Event?   @relation(fields: [eventId], references: [id])
  eventId   String?
}

model Event {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
}

model Question {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  replies   Reply[]
}

model Reply {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}

enum EnumUserGender {
  Unknown
  Male
  Female
}
