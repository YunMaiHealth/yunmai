datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String           @id @default(cuid())
  username        String           @unique
  password        String
  roles           Json
  oauthType       String
  openId          String
  sessionKey      String
  unionId         String
  trueName        String?
  inviterId       String?
  phone           String?
  province        String?
  nickName        String?
  avatarUrl       String?
  gender          EnumUserGender?
  birthday        DateTime?
  city            String?
  userIdCard      String?
  country         String?
  language        String?
  creatTime       DateTime         @default(now())
  lastLoginTime   DateTime
  userStatuses    UserStatus[]
  hubitusCheckups HubitusCheckup[]
}

model HubitusCheckup {
  id             String   @id @default(cuid())
  currentHabitus String?
  testResult     String?
  countResult    String?
  suggest        String?
  testTime       DateTime
  user           User     @relation(fields: [userId], references: [id])
  userId         String
}

model UserStatus {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updateTime  DateTime  @updatedAt
  status      String?
  intValue    Int?
  doubleValue Float?
  stringValue String?
  dateValue   DateTime?
  jsonValue   Json?
  blobValue   String?
  streamId    String?
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model MessageNotify {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EventLog {
  id         String   @id @default(cuid())
  eventTime  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  eventType  String
  eventName  String?
  eventParam Json?
  relateUser Json?
}

enum EnumUserGender {
  Unknown
  Male
  Female
}
