datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  oauthType     String
  nickName      String?
  openId        String
  sessionKey    String?
  unionId       String
  inviterId     String?
  phone         String?
  gender        EnumUserGender?
  avatarUrl     String?
  birthday      DateTime?
  identitycard  String?
  country       String?
  language      String?
  province      String?
  city          String?
  id            String          @id @default(cuid())
  realName      String?
  username      String          @unique
  password      String
  roles         Json
  creatTime     DateTime        @default(now())
  lastLoginTime DateTime        @updatedAt
  hubituses     Hubitus[]
  statuses      Status[]
  getpoints     Getpoint[]
  usepoints     Usepoint[]
  messages      Message[]
  questions     Inquiry[]
}

model Hubitus {
  id             String   @id @default(cuid())
  testTime       DateTime @default(now())
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
  currentHabitus String
  testResult     Json
  countResult    Json
  suggest        Json?
}

model Status {
  id          String    @id @default(cuid())
  updateTime  DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  status      String
  intValue    Int?
  doubleValue Float?
  stringValue String?
  dateValue   DateTime?
  jsonValue   Json?
  streamId    String?
}

model Getpoint {
  id           String   @id @default(cuid())
  getPointTime DateTime @default(now())
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?
  points       Int
  getPointType String
}

model Usepoint {
  id           String   @id @default(cuid())
  usePointTime DateTime @default(now())
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?
  points       Int
  usePointType String
}

model Message {
  id             String   @id @default(cuid())
  sendTime       DateTime @default(now())
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
  event          Event?   @relation(fields: [eventId], references: [id])
  eventId        String?
  isNew          Boolean
  messageContent Json
  messageType    String
  messageSource  String
}

model Event {
  id         String    @id @default(cuid())
  eventTime  DateTime  @default(now())
  messages   Message[]
  eventType  String
  eventName  String
  eventParam Json?
  relateUser Json?
}

model Inquiry {
  id          String   @id @default(cuid())
  inquiryTime DateTime @default(now())
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  content     Json
  isPublic    Boolean
  title       String
}

enum EnumUserGender {
  Unknown
  Male
  Female
}
