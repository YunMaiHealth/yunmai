/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsEnum,
  IsDate,
  IsJSON,
  ValidateNested,
} from "class-validator";
import { EnumUserGender } from "./EnumUserGender";
import { Type } from "class-transformer";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { HabitusCreateNestedManyWithoutUsersInput } from "./HabitusCreateNestedManyWithoutUsersInput";
import { StatusCreateNestedManyWithoutUsersInput } from "./StatusCreateNestedManyWithoutUsersInput";
import { IncomeMetaGasCreateNestedManyWithoutUsersInput } from "./IncomeMetaGasCreateNestedManyWithoutUsersInput";
import { MessageCreateNestedManyWithoutUsersInput } from "./MessageCreateNestedManyWithoutUsersInput";
import { ExpenseMetaGasCreateNestedManyWithoutUsersInput } from "./ExpenseMetaGasCreateNestedManyWithoutUsersInput";
import { InquiryCreateNestedManyWithoutUsersInput } from "./InquiryCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  oauthType!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nickName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  openId!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  sessionKey?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  unionId!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  inviterId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumUserGender,
  })
  @IsEnum(EnumUserGender)
  @IsOptional()
  @Field(() => EnumUserGender, {
    nullable: true,
  })
  gender?: "Unknown" | "Male" | "Female" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  avatarUrl?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  birthday?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  identitycard?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  language?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  province?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  realName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  creatTime!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  lastLoginTime!: Date;

  @ApiProperty({
    required: false,
    type: () => HabitusCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => HabitusCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => HabitusCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  habituses?: HabitusCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => StatusCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StatusCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StatusCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  statuses?: StatusCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => IncomeMetaGasCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => IncomeMetaGasCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => IncomeMetaGasCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  incomeMetaGases?: IncomeMetaGasCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => MessageCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MessageCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MessageCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  messages?: MessageCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ExpenseMetaGasCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ExpenseMetaGasCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ExpenseMetaGasCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  expenseMetaGases?: ExpenseMetaGasCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => InquiryCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => InquiryCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => InquiryCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  inquirys?: InquiryCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
